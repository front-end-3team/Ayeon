Deep Dive 제 10장 : 객체 리터럴

10.1 객체란?
    - 자바스크립트는 객체 기반의 프로그래밍 언어
    - 자바스크립트를 구성하는 거의 모든 것이 객체(원시 값을 제외하고)
    - 객체 타입은 다양한 타입의 값을 하나의 단위로 구성한 복합적인 자료구조
    - 변경 가능한 값

    - 객체는 0개 이상의 프로퍼티로 구성된 집합 : 프로퍼티는 키와 값으로 구성
    - 프로퍼티 값이 함수일 경우 일반 함수와 구분하기 위해 메서드라고 함

        프로퍼티 : 객체의 상태를 나타내는 값(data)
        메서트 : 프로퍼티(상태 데이터)를 참조하고 조작할 수 있는 동작(behavior)

10.2 객체 리터럴에 의한 객체 생성
    - 객체지향 언어는 클래스를 사전에 정의하고 필요한 시점에 new연산자와 함께 생성차를 호출
        인스턴스를 생성하는 방식으로 객체를 생성

    ** 인스턴스
        - 클래스에 의해 생성되어 메모리에 저장된 실체
    
    - 객체 생성 방법
        객체 리터럴 -- 가장 일반적이고 간단한 방법
        Object 생성자 함수
        생성자 함수
        Object.create 메서드
        클래스(ES6)
    
10.3 프로퍼티
    - 객체는 프로퍼티의 집합, 프로퍼티는 키와 값으로 구성

    ex) let person = {
            name: 'Lee', // 프로퍼티 키는 name, 프로퍼티 값은 'Lee'
            age: 20 // 프로퍼티 키는 age, 프로퍼티 값은 20
        }

    - 프로퍼티 나열할 때는 쉼표(,)로 구분
    - 식별자 네이밍 규칙을 따르지 않는 이름에는 반드시 따옴표를 사용해야 함

10.4 메서드
    - 프로퍼티 값이 함수일 경우 일반 함수와 구분하기 위해 메서드라고 부른다

    ex) let circle = {
            radius: 5, // 프로퍼티

            getDiameter: function () { // 메서드
                return 2 * this.radius; // this는 circle을 가리킴
            }
        };

10.5 프로퍼티 접근
    * 마침표 표기법 (.)
        
        ex) let person = {
                name: 'lee'
            }

            console.log(person.name); // 마침표 표기법에 의한 프로퍼티 접근

    * 대괄호 표기법 [...]
        - 대괄호 프로퍼티 접근 연산자 내부에 지정하는 프로퍼티 키는 반드시 따옴표로 감싼 문자열이어야 함

        ex) console.log(person['name']); // 대괄호 표기법에 의한 프로퍼티 접근

    - 객체에 존재하지 않는 프로퍼티에 접근하면 undefined 반환

10.6 프로퍼티 값 갱신
    - 이미 존재하는 프로퍼티에 값을 할당하면 프로퍼티 값이 갱신됨

    ex) let person = {
            name: 'lee'
        };

        // person 객체에 name 프로퍼티가 존재하므로 name 프로퍼티 값 갱신
        person.name = 'kim'

        console.log(person);

10.7 프로퍼티 동적 생성

    // person 객체에는 age 프로퍼티가 존재하지 않음
    // 따라서 person 객체에 age 프로퍼티가 동적으로 생성되고, 값이 할당됨
    ex) person.age = 20;

        console.log(person); // {name: 'kim', age:20}

10.8 프로퍼티 삭제
    - delete 연산자는 객체의 프로퍼티를 삭제

    ex) delete person.age;

        console.log(person); // {name: 'kim'}
        