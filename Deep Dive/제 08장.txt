Deep Dive 제 08장 : 제어문

8.1 블록문
    - 블록문 block statement/compound statement은 0개 이상의 문을 중괄호로 묶은 것, 코드 블록 또는 블록이라고 부름
    - 문의 끝에는 세미콜론을 붙이는 것이 일반적이나 자체 종결성을 갖기 때문에 세미콜론을 붙이지 않는다

    ex) { let foo = 10; } // 블록문

        let x = 1;        // 제어문
        if ( x > 10 ) {
            x++;
        }

        function sum(a, b) { // 함수 선언문
            return a + b;
        }

8.2 조건문
    - 조건문은 주어진 조건식의 평가 결과에 따라 코드 블록의 실행을 결정
    - js는 if...else 문과 switch 문으로 두 가지 조건문 제공

    8.2.1 if...else 문
    
        if (조건식) {
            // 조건식이 참이면 이 코드 블록이 실행
        } else {
            // 조건식이 거짓이면 이 코드 블록이 실행
        }

        ** 조건식을 추가하여 조건에 따라 실행될 코드 블록을 늘리고 싶을 때 else if 문 사용

        if (조건식1) {
            // 조건식1이 참이면 이 코드 블록이 실행
        } else if (조건식2) {
            // 조건식2가 참이면 이 코드 블록이 실행
        } else {
            // 조건식 1과 2가 모두 거짓이면 실행
        }

    8.2.2 switch 문
        
        switch (표현식) {
            case 표현식1:
                switch 문의 표현식과 표현식1이 일치하면 실행될 문;
                break;
            case 표현식2:
                switch 문의 표현식과 표현식2가 일치하면 실행될 문;
                break;
            default:
                switch 문의 표현식과 일치하는 case문이 없을 때 실행될 문;
        }

8.3 반복문
    - for문, while문, do...while문

    8.3.1 for문
    
        for (변수 선언문 또는 할당문; 조건식; 증감식) {
            조건식이 참인 경우 반복 실행될 문;
        }

    8.3.2 while문
        - for문은 반복 횟수가 명확할 때 주로 사용하고 while문은 반복 횟수가 불명확할 때 주로 사용

        ex) let count = 0;
            while (count < 3) {
                console.log(count);
                count++;
            }

    8.3.3 do...while문
        - do...while문은 코드 블록을 먼저 실행하고 조건식 평가 => 따라서 무조건 한번 이상 실행

        ex) let count = 0;
            do {
                console.log(count);
                count++;
            } while ( count < 3 );

8.4 break문
    - break문은 코드 블록 탈출
    - 반복문(for, for..in, for...of, while, do...while) 또는 switch문의 코드 블록 탈출

    ex) if (true) {
            break;
        }

8.5 continue문
    - continue문은 반복문의 코드 블록 실행을 현 지점에서 중단하고 반복문의 증감식으로 실행 흐름을 이동시킴
    - break문처럼 반복문을 탈출하지는 않음